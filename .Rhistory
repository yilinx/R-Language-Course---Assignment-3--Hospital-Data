directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
meanvalue <- mean(x[pollutant], na.rm=True)
}
meanvalue
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:1){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
meanvalue <- mean(x[pollutant])
}
meanvalue
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:1){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
meanvalue <- x[pollutant]
}
meanvalue
}
pollutionmean(,"sulfate")
class(pollutionmean(,"sulfate"))
mean(pollutionmean(,"sulfate"))
mean(pollutionmean(,"sulfate"), na.rm=T)
mean(pollutionmean(,"sulfate"), na.rm=True)
colmeans(pollutionmean(,"sulfate"), na.rm=True)
colMeans(pollutionmean(,"sulfate"), na.rm=True)
colMeans(pollutionmean(,"sulfate"))
pollutionmean <- function (directory, pollutant, id=1:1){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
meanvalue <- mean(xcol[,])
}
meanvalue
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:1){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
meanvalue <- mean(xcol[,], na.rm=T)
}
meanvalue
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:1){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConsolidateDate <- ""
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
ConsolidateData <- c(ConsolidateData,xmean)
}
meanvalue <- mean(ConsolidateData)
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:1){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConDate <- ""
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
ConData <- c(ConData,xmean)
}
ConData
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:332){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConDate <- ""
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
ConData <- c(ConData,xmean)
}
ConData
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:332){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConDate <- ""
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
ConData <- c(ConData,xmean)
}
xmean
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:332){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConDate <- ""
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
##ConData <- c(ConData,xmean)
}
xmean
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:5){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConDate <- ""
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
##ConData <- c(ConData,xmean)
}
xmean
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:10){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConDate <- ""
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
##ConData <- c(ConData,xmean)
}
xmean
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:10){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConData <- ""
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
ConData <- c(ConData,xmean)
}
ConData
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:10){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConData <- ""
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
ConData[i] <- xmean
}
ConData
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:10){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
ConData[i] <- xmean
}
ConData
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:10){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConData <- numeric()
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
ConData[i] <- xmean
}
ConData
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:10){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConData <- numeric()
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
ConData[i] <- xmean
}
mean(ConData, na.rm)
}
pollutionmean(,"sulfate")
pollutionmean <- function (directory, pollutant, id=1:10){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConData <- numeric()
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
ConData[i] <- xmean
}
mean(ConData, na.rm=T)
}
pollutionmean(,"sulfate")
pollutionmean(,"sulfate",1:10)
pollutionmean(,"sulfate",23)
pollutionmean(,"sulfate",1)
pollutionmean(,"nitrate",23)
pollutionmean(,"nitrate",70:72)
pollutionmean <- function (directory, pollutant, id=1:10){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConData <- numeric()
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
ConData[i] <- xmean
}
mean(ConData)
}
pollutionmean(,"sulfate",1:10)
pollutionmean <- function (directory, pollutant, id=1:10){
## 'directory' is a character vector of length 1
## indicating the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
directory <- "E:\\Coursera Data Scientist\\R Programming\\Programming Assignment 1\\specdata\\"
ConData <- numeric()
for (i in id){
i <- formatC(i, width=3, flag="0")
FileLocation <- paste(directory, i, ".csv", sep="")
x <- read.csv(FileLocation)
xcol <- x[pollutant]
xmean <- mean(xcol[,], na.rm=T)
ConData[i] <- xmean
}
ConData
}
pollutionmean(,"sulfate",1:10)
mean(pollutionmean(,"sulfate",1:10))
mean(pollutionmean(,"nitrate",70:72))
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
load(file.choose())
source(file.choose())
submit()
source('~/.active-rstudio-document', echo=TRUE)
}
make.NegLogLik <- function(data, fixed=c(FALSE,FALSE)) {
params <- fixed
function(p) {
params[!fixed] <- p
mu <- params[1]
sigma <- params[2]
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((data-mu)^2) / (sigma^2)
-(a + b)
}
}
set.seed(1); normals <- rnorm(100, 1, 2)
nLL <- make.NegLogLik(normals)
nLL
optim(c(mu = 0, sigma = 1), nLL)$par
optim(c(mu = 0, sigma = 1), nLL)
set.seed(1)
rpois(5,2)
setwd("E:/Coursera Data Scientist/R Programming/Programming Assignment 3")
best <- function(state, outcome) {
outcome <- read.csv("outcome-of-care-measures.csv")   ## Read outcome data
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
head(outcome)
best()
head(outcome)
outcome <- read.csv("outcome-of-care-measures.csv")
head(outcome)
summary(outcome)
summary(outcome$State)
table(outcome$State)
class(table(outcome$State))
StateFreq <- table(outcome$State)
names(StateFreq)
names(table(outcome$State))
best <- function(state, outcome) {
outcome <- read.csv("outcome-of-care-measures.csv")   ## Read outcome data
StateList <- names(table(outcome$State))    ##Lists all the states present
TestStates <- grepl(state,StateList)## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
TestStates
}
best("AK")
best <- function(state, outcome) {
outcome <- read.csv("outcome-of-care-measures.csv")   ## Read outcome data
StateList <- names(table(outcome$State))    ##Lists all the states present
TestStates <- state==StateList## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
TestStates
}
best("AK")
